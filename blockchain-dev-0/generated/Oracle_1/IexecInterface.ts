// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccurateContribution extends ethereum.Event {
  get params(): AccurateContribution__Params {
    return new AccurateContribution__Params(this);
  }
}

export class AccurateContribution__Params {
  _event: AccurateContribution;

  constructor(event: AccurateContribution) {
    this._event = event;
  }

  get worker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class BroadcastAppOrder extends ethereum.Event {
  get params(): BroadcastAppOrder__Params {
    return new BroadcastAppOrder__Params(this);
  }
}

export class BroadcastAppOrder__Params {
  _event: BroadcastAppOrder;

  constructor(event: BroadcastAppOrder) {
    this._event = event;
  }

  get apporder(): BroadcastAppOrderApporderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastAppOrderApporderStruct;
  }
}

export class BroadcastAppOrderApporderStruct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastDatasetOrder extends ethereum.Event {
  get params(): BroadcastDatasetOrder__Params {
    return new BroadcastDatasetOrder__Params(this);
  }
}

export class BroadcastDatasetOrder__Params {
  _event: BroadcastDatasetOrder;

  constructor(event: BroadcastDatasetOrder) {
    this._event = event;
  }

  get datasetorder(): BroadcastDatasetOrderDatasetorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastDatasetOrderDatasetorderStruct;
  }
}

export class BroadcastDatasetOrderDatasetorderStruct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastRequestOrder extends ethereum.Event {
  get params(): BroadcastRequestOrder__Params {
    return new BroadcastRequestOrder__Params(this);
  }
}

export class BroadcastRequestOrder__Params {
  _event: BroadcastRequestOrder;

  constructor(event: BroadcastRequestOrder) {
    this._event = event;
  }

  get requestorder(): BroadcastRequestOrderRequestorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastRequestOrderRequestorderStruct;
  }
}

export class BroadcastRequestOrderRequestorderStruct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class BroadcastWorkerpoolOrder extends ethereum.Event {
  get params(): BroadcastWorkerpoolOrder__Params {
    return new BroadcastWorkerpoolOrder__Params(this);
  }
}

export class BroadcastWorkerpoolOrder__Params {
  _event: BroadcastWorkerpoolOrder;

  constructor(event: BroadcastWorkerpoolOrder) {
    this._event = event;
  }

  get workerpoolorder(): BroadcastWorkerpoolOrderWorkerpoolorderStruct {
    return this._event.parameters[0].value.toTuple() as BroadcastWorkerpoolOrderWorkerpoolorderStruct;
  }
}

export class BroadcastWorkerpoolOrderWorkerpoolorderStruct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class ClosedAppOrder extends ethereum.Event {
  get params(): ClosedAppOrder__Params {
    return new ClosedAppOrder__Params(this);
  }
}

export class ClosedAppOrder__Params {
  _event: ClosedAppOrder;

  constructor(event: ClosedAppOrder) {
    this._event = event;
  }

  get appHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedDatasetOrder extends ethereum.Event {
  get params(): ClosedDatasetOrder__Params {
    return new ClosedDatasetOrder__Params(this);
  }
}

export class ClosedDatasetOrder__Params {
  _event: ClosedDatasetOrder;

  constructor(event: ClosedDatasetOrder) {
    this._event = event;
  }

  get datasetHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedRequestOrder extends ethereum.Event {
  get params(): ClosedRequestOrder__Params {
    return new ClosedRequestOrder__Params(this);
  }
}

export class ClosedRequestOrder__Params {
  _event: ClosedRequestOrder;

  constructor(event: ClosedRequestOrder) {
    this._event = event;
  }

  get requestHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class ClosedWorkerpoolOrder extends ethereum.Event {
  get params(): ClosedWorkerpoolOrder__Params {
    return new ClosedWorkerpoolOrder__Params(this);
  }
}

export class ClosedWorkerpoolOrder__Params {
  _event: ClosedWorkerpoolOrder;

  constructor(event: ClosedWorkerpoolOrder) {
    this._event = event;
  }

  get workerpoolHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class CreateCategory extends ethereum.Event {
  get params(): CreateCategory__Params {
    return new CreateCategory__Params(this);
  }
}

export class CreateCategory__Params {
  _event: CreateCategory;

  constructor(event: CreateCategory) {
    this._event = event;
  }

  get catid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get description(): string {
    return this._event.parameters[2].value.toString();
  }

  get workClockTimeRef(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class FaultyContribution extends ethereum.Event {
  get params(): FaultyContribution__Params {
    return new FaultyContribution__Params(this);
  }
}

export class FaultyContribution__Params {
  _event: FaultyContribution;

  constructor(event: FaultyContribution) {
    this._event = event;
  }

  get worker(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get taskid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Lock extends ethereum.Event {
  get params(): Lock__Params {
    return new Lock__Params(this);
  }
}

export class Lock__Params {
  _event: Lock;

  constructor(event: Lock) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OrdersMatched extends ethereum.Event {
  get params(): OrdersMatched__Params {
    return new OrdersMatched__Params(this);
  }
}

export class OrdersMatched__Params {
  _event: OrdersMatched;

  constructor(event: OrdersMatched) {
    this._event = event;
  }

  get dealid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get appHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get datasetHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get workerpoolHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get requestHash(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }

  get volume(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Reward extends ethereum.Event {
  get params(): Reward__Params {
    return new Reward__Params(this);
  }
}

export class Reward__Params {
  _event: Reward;

  constructor(event: Reward) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ref(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class SchedulerNotice extends ethereum.Event {
  get params(): SchedulerNotice__Params {
    return new SchedulerNotice__Params(this);
  }
}

export class SchedulerNotice__Params {
  _event: SchedulerNotice;

  constructor(event: SchedulerNotice) {
    this._event = event;
  }

  get workerpool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dealid(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Seize extends ethereum.Event {
  get params(): Seize__Params {
    return new Seize__Params(this);
  }
}

export class Seize__Params {
  _event: Seize;

  constructor(event: Seize) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ref(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class SignedAppOrder extends ethereum.Event {
  get params(): SignedAppOrder__Params {
    return new SignedAppOrder__Params(this);
  }
}

export class SignedAppOrder__Params {
  _event: SignedAppOrder;

  constructor(event: SignedAppOrder) {
    this._event = event;
  }

  get appHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SignedDatasetOrder extends ethereum.Event {
  get params(): SignedDatasetOrder__Params {
    return new SignedDatasetOrder__Params(this);
  }
}

export class SignedDatasetOrder__Params {
  _event: SignedDatasetOrder;

  constructor(event: SignedDatasetOrder) {
    this._event = event;
  }

  get datasetHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SignedRequestOrder extends ethereum.Event {
  get params(): SignedRequestOrder__Params {
    return new SignedRequestOrder__Params(this);
  }
}

export class SignedRequestOrder__Params {
  _event: SignedRequestOrder;

  constructor(event: SignedRequestOrder) {
    this._event = event;
  }

  get requestHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class SignedWorkerpoolOrder extends ethereum.Event {
  get params(): SignedWorkerpoolOrder__Params {
    return new SignedWorkerpoolOrder__Params(this);
  }
}

export class SignedWorkerpoolOrder__Params {
  _event: SignedWorkerpoolOrder;

  constructor(event: SignedWorkerpoolOrder) {
    this._event = event;
  }

  get workerpoolHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class TaskClaimed extends ethereum.Event {
  get params(): TaskClaimed__Params {
    return new TaskClaimed__Params(this);
  }
}

export class TaskClaimed__Params {
  _event: TaskClaimed;

  constructor(event: TaskClaimed) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class TaskConsensus extends ethereum.Event {
  get params(): TaskConsensus__Params {
    return new TaskConsensus__Params(this);
  }
}

export class TaskConsensus__Params {
  _event: TaskConsensus;

  constructor(event: TaskConsensus) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get consensus(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TaskContribute extends ethereum.Event {
  get params(): TaskContribute__Params {
    return new TaskContribute__Params(this);
  }
}

export class TaskContribute__Params {
  _event: TaskContribute;

  constructor(event: TaskContribute) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get worker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get hash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class TaskFinalize extends ethereum.Event {
  get params(): TaskFinalize__Params {
    return new TaskFinalize__Params(this);
  }
}

export class TaskFinalize__Params {
  _event: TaskFinalize;

  constructor(event: TaskFinalize) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get results(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class TaskInitialize extends ethereum.Event {
  get params(): TaskInitialize__Params {
    return new TaskInitialize__Params(this);
  }
}

export class TaskInitialize__Params {
  _event: TaskInitialize;

  constructor(event: TaskInitialize) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get workerpool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TaskReopen extends ethereum.Event {
  get params(): TaskReopen__Params {
    return new TaskReopen__Params(this);
  }
}

export class TaskReopen__Params {
  _event: TaskReopen;

  constructor(event: TaskReopen) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class TaskReveal extends ethereum.Event {
  get params(): TaskReveal__Params {
    return new TaskReveal__Params(this);
  }
}

export class TaskReveal__Params {
  _event: TaskReveal;

  constructor(event: TaskReveal) {
    this._event = event;
  }

  get taskid(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get worker(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get digest(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Unlock extends ethereum.Event {
  get params(): Unlock__Params {
    return new Unlock__Params(this);
  }
}

export class Unlock__Params {
  _event: Unlock;

  constructor(event: Unlock) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IexecInterface__domainResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get version(): string {
    return this[1].toString();
  }

  get chainId(): BigInt {
    return this[2].toBigInt();
  }

  get verifyingContract(): Address {
    return this[3].toAddress();
  }
}

export class IexecInterface__matchOrdersInputParam0Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecInterface__matchOrdersInputParam1Struct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class IexecInterface__matchOrdersInputParam2Struct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class IexecInterface__matchOrdersInputParam3Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class IexecInterface__viewAccountResultValue0Struct extends ethereum.Tuple {
  get stake(): BigInt {
    return this[0].toBigInt();
  }

  get locked(): BigInt {
    return this[1].toBigInt();
  }
}

export class IexecInterface__viewCategoryResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get workClockTimeRef(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecInterface__viewContributionResultValue0Struct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get resultHash(): Bytes {
    return this[1].toBytes();
  }

  get resultSeal(): Bytes {
    return this[2].toBytes();
  }

  get enclaveChallenge(): Address {
    return this[3].toAddress();
  }

  get weight(): BigInt {
    return this[4].toBigInt();
  }
}

export class IexecInterface__viewDealResultValue0Struct extends ethereum.Tuple {
  get app(): IexecInterface__viewDealResultValue0AppStruct {
    return this[0].toTuple() as IexecInterface__viewDealResultValue0AppStruct;
  }

  get dataset(): IexecInterface__viewDealResultValue0DatasetStruct {
    return this[1].toTuple() as IexecInterface__viewDealResultValue0DatasetStruct;
  }

  get workerpool(): IexecInterface__viewDealResultValue0WorkerpoolStruct {
    return this[2].toTuple() as IexecInterface__viewDealResultValue0WorkerpoolStruct;
  }

  get trust(): BigInt {
    return this[3].toBigInt();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get tag(): Bytes {
    return this[5].toBytes();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get beneficiary(): Address {
    return this[7].toAddress();
  }

  get callback(): Address {
    return this[8].toAddress();
  }

  get params(): string {
    return this[9].toString();
  }

  get startTime(): BigInt {
    return this[10].toBigInt();
  }

  get botFirst(): BigInt {
    return this[11].toBigInt();
  }

  get botSize(): BigInt {
    return this[12].toBigInt();
  }

  get workerStake(): BigInt {
    return this[13].toBigInt();
  }

  get schedulerRewardRatio(): BigInt {
    return this[14].toBigInt();
  }
}

export class IexecInterface__viewDealResultValue0AppStruct extends ethereum.Tuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecInterface__viewDealResultValue0DatasetStruct extends ethereum.Tuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecInterface__viewDealResultValue0WorkerpoolStruct extends ethereum.Tuple {
  get pointer(): Address {
    return this[0].toAddress();
  }

  get owner(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }
}

export class IexecInterface__viewTaskResultValue0Struct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get dealid(): Bytes {
    return this[1].toBytes();
  }

  get idx(): BigInt {
    return this[2].toBigInt();
  }

  get timeref(): BigInt {
    return this[3].toBigInt();
  }

  get contributionDeadline(): BigInt {
    return this[4].toBigInt();
  }

  get revealDeadline(): BigInt {
    return this[5].toBigInt();
  }

  get finalDeadline(): BigInt {
    return this[6].toBigInt();
  }

  get consensusValue(): Bytes {
    return this[7].toBytes();
  }

  get revealCounter(): BigInt {
    return this[8].toBigInt();
  }

  get winnerCounter(): BigInt {
    return this[9].toBigInt();
  }

  get contributors(): Array<Address> {
    return this[10].toAddressArray();
  }

  get resultDigest(): Bytes {
    return this[11].toBytes();
  }

  get results(): Bytes {
    return this[12].toBytes();
  }

  get resultsTimestamp(): BigInt {
    return this[13].toBigInt();
  }

  get resultsCallback(): Bytes {
    return this[14].toBytes();
  }
}

export class IexecInterface extends ethereum.SmartContract {
  static bind(address: Address): IexecInterface {
    return new IexecInterface("IexecInterface", address);
  }

  UniswapV2Router(): Address {
    let result = super.call(
      "UniswapV2Router",
      "UniswapV2Router():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_UniswapV2Router(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "UniswapV2Router",
      "UniswapV2Router():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowance(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_allowance(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  appregistry(): Address {
    let result = super.call("appregistry", "appregistry():(address)", []);

    return result[0].toAddress();
  }

  try_appregistry(): ethereum.CallResult<Address> {
    let result = super.tryCall("appregistry", "appregistry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  approve(param0: Address, param1: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toBoolean();
  }

  try_approve(param0: Address, param1: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  approveAndCall(param0: Address, param1: BigInt, param2: Bytes): boolean {
    let result = super.call(
      "approveAndCall",
      "approveAndCall(address,uint256,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_approveAndCall(
    param0: Address,
    param1: BigInt,
    param2: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "approveAndCall",
      "approveAndCall(address,uint256,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(param0: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  callbackgas(): BigInt {
    let result = super.call("callbackgas", "callbackgas():(uint256)", []);

    return result[0].toBigInt();
  }

  try_callbackgas(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("callbackgas", "callbackgas():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimArray(param0: Array<Bytes>): boolean {
    let result = super.call("claimArray", "claimArray(bytes32[]):(bool)", [
      ethereum.Value.fromFixedBytesArray(param0)
    ]);

    return result[0].toBoolean();
  }

  try_claimArray(param0: Array<Bytes>): ethereum.CallResult<boolean> {
    let result = super.tryCall("claimArray", "claimArray(bytes32[]):(bool)", [
      ethereum.Value.fromFixedBytesArray(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  contribution_deadline_ratio(): BigInt {
    let result = super.call(
      "contribution_deadline_ratio",
      "contribution_deadline_ratio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_contribution_deadline_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "contribution_deadline_ratio",
      "contribution_deadline_ratio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  countCategory(): BigInt {
    let result = super.call("countCategory", "countCategory():(uint256)", []);

    return result[0].toBigInt();
  }

  try_countCategory(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "countCategory",
      "countCategory():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createCategory(param0: string, param1: string, param2: BigInt): BigInt {
    let result = super.call(
      "createCategory",
      "createCategory(string,string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromString(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_createCategory(
    param0: string,
    param1: string,
    param2: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createCategory",
      "createCategory(string,string,uint256):(uint256)",
      [
        ethereum.Value.fromString(param0),
        ethereum.Value.fromString(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  datasetregistry(): Address {
    let result = super.call(
      "datasetregistry",
      "datasetregistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_datasetregistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "datasetregistry",
      "datasetregistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_decreaseAllowance(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseAllowance",
      "decreaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  deposit(param0: BigInt): boolean {
    let result = super.call("deposit", "deposit(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_deposit(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("deposit", "deposit(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  depositFor(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "depositFor",
      "depositFor(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_depositFor(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "depositFor",
      "depositFor(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  depositForArray(param0: Array<BigInt>, param1: Array<Address>): boolean {
    let result = super.call(
      "depositForArray",
      "depositForArray(uint256[],address[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigIntArray(param0),
        ethereum.Value.fromAddressArray(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_depositForArray(
    param0: Array<BigInt>,
    param1: Array<Address>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "depositForArray",
      "depositForArray(uint256[],address[]):(bool)",
      [
        ethereum.Value.fromUnsignedBigIntArray(param0),
        ethereum.Value.fromAddressArray(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  domain(): IexecInterface__domainResultValue0Struct {
    let result = super.call(
      "domain",
      "domain():((string,string,uint256,address))",
      []
    );

    return result[0].toTuple() as IexecInterface__domainResultValue0Struct;
  }

  try_domain(): ethereum.CallResult<IexecInterface__domainResultValue0Struct> {
    let result = super.tryCall(
      "domain",
      "domain():((string,string,uint256,address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__domainResultValue0Struct
    );
  }

  eip712domain_separator(): Bytes {
    let result = super.call(
      "eip712domain_separator",
      "eip712domain_separator():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_eip712domain_separator(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "eip712domain_separator",
      "eip712domain_separator():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  estimateDepositEthSent(param0: BigInt): BigInt {
    let result = super.call(
      "estimateDepositEthSent",
      "estimateDepositEthSent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_estimateDepositEthSent(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateDepositEthSent",
      "estimateDepositEthSent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateDepositTokenWanted(param0: BigInt): BigInt {
    let result = super.call(
      "estimateDepositTokenWanted",
      "estimateDepositTokenWanted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_estimateDepositTokenWanted(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateDepositTokenWanted",
      "estimateDepositTokenWanted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateWithdrawEthWanted(param0: BigInt): BigInt {
    let result = super.call(
      "estimateWithdrawEthWanted",
      "estimateWithdrawEthWanted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_estimateWithdrawEthWanted(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateWithdrawEthWanted",
      "estimateWithdrawEthWanted(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  estimateWithdrawTokenSent(param0: BigInt): BigInt {
    let result = super.call(
      "estimateWithdrawTokenSent",
      "estimateWithdrawTokenSent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_estimateWithdrawTokenSent(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "estimateWithdrawTokenSent",
      "estimateWithdrawTokenSent(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  final_deadline_ratio(): BigInt {
    let result = super.call(
      "final_deadline_ratio",
      "final_deadline_ratio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_final_deadline_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "final_deadline_ratio",
      "final_deadline_ratio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  frozenOf(param0: Address): BigInt {
    let result = super.call("frozenOf", "frozenOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_frozenOf(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("frozenOf", "frozenOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groupmember_purpose(): BigInt {
    let result = super.call(
      "groupmember_purpose",
      "groupmember_purpose():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_groupmember_purpose(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "groupmember_purpose",
      "groupmember_purpose():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  increaseAllowance(param0: Address, param1: BigInt): boolean {
    let result = super.call(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_increaseAllowance(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseAllowance",
      "increaseAllowance(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  initialize(param0: Bytes, param1: BigInt): Bytes {
    let result = super.call(
      "initialize",
      "initialize(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBytes();
  }

  try_initialize(param0: Bytes, param1: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "initialize",
      "initialize(bytes32,uint256):(bytes32)",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  initializeAndClaimArray(
    param0: Array<Bytes>,
    param1: Array<BigInt>
  ): boolean {
    let result = super.call(
      "initializeAndClaimArray",
      "initializeAndClaimArray(bytes32[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(param0),
        ethereum.Value.fromUnsignedBigIntArray(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_initializeAndClaimArray(
    param0: Array<Bytes>,
    param1: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "initializeAndClaimArray",
      "initializeAndClaimArray(bytes32[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(param0),
        ethereum.Value.fromUnsignedBigIntArray(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  initializeArray(param0: Array<Bytes>, param1: Array<BigInt>): boolean {
    let result = super.call(
      "initializeArray",
      "initializeArray(bytes32[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(param0),
        ethereum.Value.fromUnsignedBigIntArray(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_initializeArray(
    param0: Array<Bytes>,
    param1: Array<BigInt>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "initializeArray",
      "initializeArray(bytes32[],uint256[]):(bool)",
      [
        ethereum.Value.fromFixedBytesArray(param0),
        ethereum.Value.fromUnsignedBigIntArray(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kitty_address(): Address {
    let result = super.call("kitty_address", "kitty_address():(address)", []);

    return result[0].toAddress();
  }

  try_kitty_address(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "kitty_address",
      "kitty_address():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  kitty_min(): BigInt {
    let result = super.call("kitty_min", "kitty_min():(uint256)", []);

    return result[0].toBigInt();
  }

  try_kitty_min(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("kitty_min", "kitty_min():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  kitty_ratio(): BigInt {
    let result = super.call("kitty_ratio", "kitty_ratio():(uint256)", []);

    return result[0].toBigInt();
  }

  try_kitty_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("kitty_ratio", "kitty_ratio():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  matchOrders(
    param0: IexecInterface__matchOrdersInputParam0Struct,
    param1: IexecInterface__matchOrdersInputParam1Struct,
    param2: IexecInterface__matchOrdersInputParam2Struct,
    param3: IexecInterface__matchOrdersInputParam3Struct
  ): Bytes {
    let result = super.call(
      "matchOrders",
      "matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)):(bytes32)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromTuple(param1),
        ethereum.Value.fromTuple(param2),
        ethereum.Value.fromTuple(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_matchOrders(
    param0: IexecInterface__matchOrdersInputParam0Struct,
    param1: IexecInterface__matchOrdersInputParam1Struct,
    param2: IexecInterface__matchOrdersInputParam2Struct,
    param3: IexecInterface__matchOrdersInputParam3Struct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "matchOrders",
      "matchOrders((address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,address,address,address,bytes32,bytes),(address,uint256,uint256,bytes32,uint256,uint256,address,address,address,bytes32,bytes),(address,uint256,address,uint256,address,uint256,address,uint256,bytes32,uint256,uint256,address,address,string,bytes32,bytes)):(bytes32)",
      [
        ethereum.Value.fromTuple(param0),
        ethereum.Value.fromTuple(param1),
        ethereum.Value.fromTuple(param2),
        ethereum.Value.fromTuple(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  receiveApproval(
    param0: Address,
    param1: BigInt,
    param2: Address,
    param3: Bytes
  ): boolean {
    let result = super.call(
      "receiveApproval",
      "receiveApproval(address,uint256,address,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBoolean();
  }

  try_receiveApproval(
    param0: Address,
    param1: BigInt,
    param2: Address,
    param3: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "receiveApproval",
      "receiveApproval(address,uint256,address,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  recover(): BigInt {
    let result = super.call("recover", "recover():(uint256)", []);

    return result[0].toBigInt();
  }

  try_recover(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("recover", "recover():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  resultFor(param0: Bytes): Bytes {
    let result = super.call("resultFor", "resultFor(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBytes();
  }

  try_resultFor(param0: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("resultFor", "resultFor(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  reveal_deadline_ratio(): BigInt {
    let result = super.call(
      "reveal_deadline_ratio",
      "reveal_deadline_ratio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_reveal_deadline_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reveal_deadline_ratio",
      "reveal_deadline_ratio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  teebroker(): Address {
    let result = super.call("teebroker", "teebroker():(address)", []);

    return result[0].toAddress();
  }

  try_teebroker(): ethereum.CallResult<Address> {
    let result = super.tryCall("teebroker", "teebroker():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(param0: Address, param1: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(param0: Address, param1: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(param0: Address, param1: Address, param2: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    param0: Address,
    param1: Address,
    param2: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifyPresignature(param0: Address, param1: Bytes): boolean {
    let result = super.call(
      "verifyPresignature",
      "verifyPresignature(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_verifyPresignature(
    param0: Address,
    param1: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyPresignature",
      "verifyPresignature(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifyPresignatureOrSignature(
    param0: Address,
    param1: Bytes,
    param2: Bytes
  ): boolean {
    let result = super.call(
      "verifyPresignatureOrSignature",
      "verifyPresignatureOrSignature(address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_verifyPresignatureOrSignature(
    param0: Address,
    param1: Bytes,
    param2: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyPresignatureOrSignature",
      "verifyPresignatureOrSignature(address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  verifySignature(param0: Address, param1: Bytes, param2: Bytes): boolean {
    let result = super.call(
      "verifySignature",
      "verifySignature(address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );

    return result[0].toBoolean();
  }

  try_verifySignature(
    param0: Address,
    param1: Bytes,
    param2: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifySignature",
      "verifySignature(address,bytes32,bytes):(bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1),
        ethereum.Value.fromBytes(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  viewAccount(param0: Address): IexecInterface__viewAccountResultValue0Struct {
    let result = super.call(
      "viewAccount",
      "viewAccount(address):((uint256,uint256))",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toTuple() as IexecInterface__viewAccountResultValue0Struct;
  }

  try_viewAccount(
    param0: Address
  ): ethereum.CallResult<IexecInterface__viewAccountResultValue0Struct> {
    let result = super.tryCall(
      "viewAccount",
      "viewAccount(address):((uint256,uint256))",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__viewAccountResultValue0Struct
    );
  }

  viewCategory(param0: BigInt): IexecInterface__viewCategoryResultValue0Struct {
    let result = super.call(
      "viewCategory",
      "viewCategory(uint256):((string,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toTuple() as IexecInterface__viewCategoryResultValue0Struct;
  }

  try_viewCategory(
    param0: BigInt
  ): ethereum.CallResult<IexecInterface__viewCategoryResultValue0Struct> {
    let result = super.tryCall(
      "viewCategory",
      "viewCategory(uint256):((string,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__viewCategoryResultValue0Struct
    );
  }

  viewConsumed(param0: Bytes): BigInt {
    let result = super.call("viewConsumed", "viewConsumed(bytes32):(uint256)", [
      ethereum.Value.fromFixedBytes(param0)
    ]);

    return result[0].toBigInt();
  }

  try_viewConsumed(param0: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "viewConsumed",
      "viewConsumed(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewContribution(
    param0: Bytes,
    param1: Address
  ): IexecInterface__viewContributionResultValue0Struct {
    let result = super.call(
      "viewContribution",
      "viewContribution(bytes32,address):((uint8,bytes32,bytes32,address,uint256))",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toTuple() as IexecInterface__viewContributionResultValue0Struct;
  }

  try_viewContribution(
    param0: Bytes,
    param1: Address
  ): ethereum.CallResult<IexecInterface__viewContributionResultValue0Struct> {
    let result = super.tryCall(
      "viewContribution",
      "viewContribution(bytes32,address):((uint8,bytes32,bytes32,address,uint256))",
      [
        ethereum.Value.fromFixedBytes(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__viewContributionResultValue0Struct
    );
  }

  viewDeal(param0: Bytes): IexecInterface__viewDealResultValue0Struct {
    let result = super.call(
      "viewDeal",
      "viewDeal(bytes32):(((address,address,uint256),(address,address,uint256),(address,address,uint256),uint256,uint256,bytes32,address,address,address,string,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toTuple() as IexecInterface__viewDealResultValue0Struct;
  }

  try_viewDeal(
    param0: Bytes
  ): ethereum.CallResult<IexecInterface__viewDealResultValue0Struct> {
    let result = super.tryCall(
      "viewDeal",
      "viewDeal(bytes32):(((address,address,uint256),(address,address,uint256),(address,address,uint256),uint256,uint256,bytes32,address,address,address,string,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__viewDealResultValue0Struct
    );
  }

  viewPresigned(param0: Bytes): Address {
    let result = super.call(
      "viewPresigned",
      "viewPresigned(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_viewPresigned(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "viewPresigned",
      "viewPresigned(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  viewScore(param0: Address): BigInt {
    let result = super.call("viewScore", "viewScore(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_viewScore(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("viewScore", "viewScore(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  viewTask(param0: Bytes): IexecInterface__viewTaskResultValue0Struct {
    let result = super.call(
      "viewTask",
      "viewTask(bytes32):((uint8,bytes32,uint256,uint256,uint256,uint256,uint256,bytes32,uint256,uint256,address[],bytes32,bytes,uint256,bytes))",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toTuple() as IexecInterface__viewTaskResultValue0Struct;
  }

  try_viewTask(
    param0: Bytes
  ): ethereum.CallResult<IexecInterface__viewTaskResultValue0Struct> {
    let result = super.tryCall(
      "viewTask",
      "viewTask(bytes32):((uint8,bytes32,uint256,uint256,uint256,uint256,uint256,bytes32,uint256,uint256,address[],bytes32,bytes,uint256,bytes))",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTuple() as IexecInterface__viewTaskResultValue0Struct
    );
  }

  withdraw(param0: BigInt): boolean {
    let result = super.call("withdraw", "withdraw(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBoolean();
  }

  try_withdraw(param0: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("withdraw", "withdraw(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  withdrawTo(param0: BigInt, param1: Address): boolean {
    let result = super.call(
      "withdrawTo",
      "withdrawTo(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );

    return result[0].toBoolean();
  }

  try_withdrawTo(
    param0: BigInt,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "withdrawTo",
      "withdrawTo(uint256,address):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromAddress(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  workerpool_stake_ratio(): BigInt {
    let result = super.call(
      "workerpool_stake_ratio",
      "workerpool_stake_ratio():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_workerpool_stake_ratio(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "workerpool_stake_ratio",
      "workerpool_stake_ratio():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  workerpoolregistry(): Address {
    let result = super.call(
      "workerpoolregistry",
      "workerpoolregistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_workerpoolregistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "workerpoolregistry",
      "workerpoolregistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ApproveAndCallCall extends ethereum.Call {
  get inputs(): ApproveAndCallCall__Inputs {
    return new ApproveAndCallCall__Inputs(this);
  }

  get outputs(): ApproveAndCallCall__Outputs {
    return new ApproveAndCallCall__Outputs(this);
  }
}

export class ApproveAndCallCall__Inputs {
  _call: ApproveAndCallCall;

  constructor(call: ApproveAndCallCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ApproveAndCallCall__Outputs {
  _call: ApproveAndCallCall;

  constructor(call: ApproveAndCallCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BroadcastAppOrderCall extends ethereum.Call {
  get inputs(): BroadcastAppOrderCall__Inputs {
    return new BroadcastAppOrderCall__Inputs(this);
  }

  get outputs(): BroadcastAppOrderCall__Outputs {
    return new BroadcastAppOrderCall__Outputs(this);
  }
}

export class BroadcastAppOrderCall__Inputs {
  _call: BroadcastAppOrderCall;

  constructor(call: BroadcastAppOrderCall) {
    this._call = call;
  }

  get value0(): BroadcastAppOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as BroadcastAppOrderCallValue0Struct;
  }
}

export class BroadcastAppOrderCall__Outputs {
  _call: BroadcastAppOrderCall;

  constructor(call: BroadcastAppOrderCall) {
    this._call = call;
  }
}

export class BroadcastAppOrderCallValue0Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastDatasetOrderCall extends ethereum.Call {
  get inputs(): BroadcastDatasetOrderCall__Inputs {
    return new BroadcastDatasetOrderCall__Inputs(this);
  }

  get outputs(): BroadcastDatasetOrderCall__Outputs {
    return new BroadcastDatasetOrderCall__Outputs(this);
  }
}

export class BroadcastDatasetOrderCall__Inputs {
  _call: BroadcastDatasetOrderCall;

  constructor(call: BroadcastDatasetOrderCall) {
    this._call = call;
  }

  get value0(): BroadcastDatasetOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as BroadcastDatasetOrderCallValue0Struct;
  }
}

export class BroadcastDatasetOrderCall__Outputs {
  _call: BroadcastDatasetOrderCall;

  constructor(call: BroadcastDatasetOrderCall) {
    this._call = call;
  }
}

export class BroadcastDatasetOrderCallValue0Struct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class BroadcastRequestOrderCall extends ethereum.Call {
  get inputs(): BroadcastRequestOrderCall__Inputs {
    return new BroadcastRequestOrderCall__Inputs(this);
  }

  get outputs(): BroadcastRequestOrderCall__Outputs {
    return new BroadcastRequestOrderCall__Outputs(this);
  }
}

export class BroadcastRequestOrderCall__Inputs {
  _call: BroadcastRequestOrderCall;

  constructor(call: BroadcastRequestOrderCall) {
    this._call = call;
  }

  get value0(): BroadcastRequestOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as BroadcastRequestOrderCallValue0Struct;
  }
}

export class BroadcastRequestOrderCall__Outputs {
  _call: BroadcastRequestOrderCall;

  constructor(call: BroadcastRequestOrderCall) {
    this._call = call;
  }
}

export class BroadcastRequestOrderCallValue0Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class BroadcastWorkerpoolOrderCall extends ethereum.Call {
  get inputs(): BroadcastWorkerpoolOrderCall__Inputs {
    return new BroadcastWorkerpoolOrderCall__Inputs(this);
  }

  get outputs(): BroadcastWorkerpoolOrderCall__Outputs {
    return new BroadcastWorkerpoolOrderCall__Outputs(this);
  }
}

export class BroadcastWorkerpoolOrderCall__Inputs {
  _call: BroadcastWorkerpoolOrderCall;

  constructor(call: BroadcastWorkerpoolOrderCall) {
    this._call = call;
  }

  get value0(): BroadcastWorkerpoolOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as BroadcastWorkerpoolOrderCallValue0Struct;
  }
}

export class BroadcastWorkerpoolOrderCall__Outputs {
  _call: BroadcastWorkerpoolOrderCall;

  constructor(call: BroadcastWorkerpoolOrderCall) {
    this._call = call;
  }
}

export class BroadcastWorkerpoolOrderCallValue0Struct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class ClaimArrayCall extends ethereum.Call {
  get inputs(): ClaimArrayCall__Inputs {
    return new ClaimArrayCall__Inputs(this);
  }

  get outputs(): ClaimArrayCall__Outputs {
    return new ClaimArrayCall__Outputs(this);
  }
}

export class ClaimArrayCall__Inputs {
  _call: ClaimArrayCall;

  constructor(call: ClaimArrayCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class ClaimArrayCall__Outputs {
  _call: ClaimArrayCall;

  constructor(call: ClaimArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConfigureCall extends ethereum.Call {
  get inputs(): ConfigureCall__Inputs {
    return new ConfigureCall__Inputs(this);
  }

  get outputs(): ConfigureCall__Outputs {
    return new ConfigureCall__Outputs(this);
  }
}

export class ConfigureCall__Inputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): string {
    return this._call.inputValues[1].value.toString();
  }

  get value2(): string {
    return this._call.inputValues[2].value.toString();
  }

  get value3(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get value4(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get value5(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get value6(): Address {
    return this._call.inputValues[6].value.toAddress();
  }

  get value7(): Address {
    return this._call.inputValues[7].value.toAddress();
  }
}

export class ConfigureCall__Outputs {
  _call: ConfigureCall;

  constructor(call: ConfigureCall) {
    this._call = call;
  }
}

export class ContributeCall extends ethereum.Call {
  get inputs(): ContributeCall__Inputs {
    return new ContributeCall__Inputs(this);
  }

  get outputs(): ContributeCall__Outputs {
    return new ContributeCall__Outputs(this);
  }
}

export class ContributeCall__Inputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get value3(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }

  get value5(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class ContributeCall__Outputs {
  _call: ContributeCall;

  constructor(call: ContributeCall) {
    this._call = call;
  }
}

export class ContributeAndFinalizeCall extends ethereum.Call {
  get inputs(): ContributeAndFinalizeCall__Inputs {
    return new ContributeAndFinalizeCall__Inputs(this);
  }

  get outputs(): ContributeAndFinalizeCall__Outputs {
    return new ContributeAndFinalizeCall__Outputs(this);
  }
}

export class ContributeAndFinalizeCall__Inputs {
  _call: ContributeAndFinalizeCall;

  constructor(call: ContributeAndFinalizeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get value4(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get value5(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get value6(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class ContributeAndFinalizeCall__Outputs {
  _call: ContributeAndFinalizeCall;

  constructor(call: ContributeAndFinalizeCall) {
    this._call = call;
  }
}

export class CreateCategoryCall extends ethereum.Call {
  get inputs(): CreateCategoryCall__Inputs {
    return new CreateCategoryCall__Inputs(this);
  }

  get outputs(): CreateCategoryCall__Outputs {
    return new CreateCategoryCall__Outputs(this);
  }
}

export class CreateCategoryCall__Inputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }

  get value0(): string {
    return this._call.inputValues[0].value.toString();
  }

  get value1(): string {
    return this._call.inputValues[1].value.toString();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CreateCategoryCall__Outputs {
  _call: CreateCategoryCall;

  constructor(call: CreateCategoryCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositEthCall extends ethereum.Call {
  get inputs(): DepositEthCall__Inputs {
    return new DepositEthCall__Inputs(this);
  }

  get outputs(): DepositEthCall__Outputs {
    return new DepositEthCall__Outputs(this);
  }
}

export class DepositEthCall__Inputs {
  _call: DepositEthCall;

  constructor(call: DepositEthCall) {
    this._call = call;
  }
}

export class DepositEthCall__Outputs {
  _call: DepositEthCall;

  constructor(call: DepositEthCall) {
    this._call = call;
  }
}

export class DepositEthForCall extends ethereum.Call {
  get inputs(): DepositEthForCall__Inputs {
    return new DepositEthForCall__Inputs(this);
  }

  get outputs(): DepositEthForCall__Outputs {
    return new DepositEthForCall__Outputs(this);
  }
}

export class DepositEthForCall__Inputs {
  _call: DepositEthForCall;

  constructor(call: DepositEthForCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DepositEthForCall__Outputs {
  _call: DepositEthForCall;

  constructor(call: DepositEthForCall) {
    this._call = call;
  }
}

export class DepositForCall extends ethereum.Call {
  get inputs(): DepositForCall__Inputs {
    return new DepositForCall__Inputs(this);
  }

  get outputs(): DepositForCall__Outputs {
    return new DepositForCall__Outputs(this);
  }
}

export class DepositForCall__Inputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DepositForCall__Outputs {
  _call: DepositForCall;

  constructor(call: DepositForCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class DepositForArrayCall extends ethereum.Call {
  get inputs(): DepositForArrayCall__Inputs {
    return new DepositForArrayCall__Inputs(this);
  }

  get outputs(): DepositForArrayCall__Outputs {
    return new DepositForArrayCall__Outputs(this);
  }
}

export class DepositForArrayCall__Inputs {
  _call: DepositForArrayCall;

  constructor(call: DepositForArrayCall) {
    this._call = call;
  }

  get value0(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get value1(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class DepositForArrayCall__Outputs {
  _call: DepositForArrayCall;

  constructor(call: DepositForArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class FinalizeCall extends ethereum.Call {
  get inputs(): FinalizeCall__Inputs {
    return new FinalizeCall__Inputs(this);
  }

  get outputs(): FinalizeCall__Outputs {
    return new FinalizeCall__Outputs(this);
  }
}

export class FinalizeCall__Inputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get value2(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class FinalizeCall__Outputs {
  _call: FinalizeCall;

  constructor(call: FinalizeCall) {
    this._call = call;
  }
}

export class ImportScoreCall extends ethereum.Call {
  get inputs(): ImportScoreCall__Inputs {
    return new ImportScoreCall__Inputs(this);
  }

  get outputs(): ImportScoreCall__Outputs {
    return new ImportScoreCall__Outputs(this);
  }
}

export class ImportScoreCall__Inputs {
  _call: ImportScoreCall;

  constructor(call: ImportScoreCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ImportScoreCall__Outputs {
  _call: ImportScoreCall;

  constructor(call: ImportScoreCall) {
    this._call = call;
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class InitializeAndClaimArrayCall extends ethereum.Call {
  get inputs(): InitializeAndClaimArrayCall__Inputs {
    return new InitializeAndClaimArrayCall__Inputs(this);
  }

  get outputs(): InitializeAndClaimArrayCall__Outputs {
    return new InitializeAndClaimArrayCall__Outputs(this);
  }
}

export class InitializeAndClaimArrayCall__Inputs {
  _call: InitializeAndClaimArrayCall;

  constructor(call: InitializeAndClaimArrayCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get value1(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class InitializeAndClaimArrayCall__Outputs {
  _call: InitializeAndClaimArrayCall;

  constructor(call: InitializeAndClaimArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeArrayCall extends ethereum.Call {
  get inputs(): InitializeArrayCall__Inputs {
    return new InitializeArrayCall__Inputs(this);
  }

  get outputs(): InitializeArrayCall__Outputs {
    return new InitializeArrayCall__Outputs(this);
  }
}

export class InitializeArrayCall__Inputs {
  _call: InitializeArrayCall;

  constructor(call: InitializeArrayCall) {
    this._call = call;
  }

  get value0(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get value1(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class InitializeArrayCall__Outputs {
  _call: InitializeArrayCall;

  constructor(call: InitializeArrayCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ManageAppOrderCall extends ethereum.Call {
  get inputs(): ManageAppOrderCall__Inputs {
    return new ManageAppOrderCall__Inputs(this);
  }

  get outputs(): ManageAppOrderCall__Outputs {
    return new ManageAppOrderCall__Outputs(this);
  }
}

export class ManageAppOrderCall__Inputs {
  _call: ManageAppOrderCall;

  constructor(call: ManageAppOrderCall) {
    this._call = call;
  }

  get value0(): ManageAppOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as ManageAppOrderCallValue0Struct;
  }
}

export class ManageAppOrderCall__Outputs {
  _call: ManageAppOrderCall;

  constructor(call: ManageAppOrderCall) {
    this._call = call;
  }
}

export class ManageAppOrderCallValue0Struct extends ethereum.Tuple {
  get order(): ManageAppOrderCallValue0OrderStruct {
    return this[0].toTuple() as ManageAppOrderCallValue0OrderStruct;
  }

  get operation(): i32 {
    return this[1].toI32();
  }

  get sign(): Bytes {
    return this[2].toBytes();
  }
}

export class ManageAppOrderCallValue0OrderStruct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class ManageDatasetOrderCall extends ethereum.Call {
  get inputs(): ManageDatasetOrderCall__Inputs {
    return new ManageDatasetOrderCall__Inputs(this);
  }

  get outputs(): ManageDatasetOrderCall__Outputs {
    return new ManageDatasetOrderCall__Outputs(this);
  }
}

export class ManageDatasetOrderCall__Inputs {
  _call: ManageDatasetOrderCall;

  constructor(call: ManageDatasetOrderCall) {
    this._call = call;
  }

  get value0(): ManageDatasetOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as ManageDatasetOrderCallValue0Struct;
  }
}

export class ManageDatasetOrderCall__Outputs {
  _call: ManageDatasetOrderCall;

  constructor(call: ManageDatasetOrderCall) {
    this._call = call;
  }
}

export class ManageDatasetOrderCallValue0Struct extends ethereum.Tuple {
  get order(): ManageDatasetOrderCallValue0OrderStruct {
    return this[0].toTuple() as ManageDatasetOrderCallValue0OrderStruct;
  }

  get operation(): i32 {
    return this[1].toI32();
  }

  get sign(): Bytes {
    return this[2].toBytes();
  }
}

export class ManageDatasetOrderCallValue0OrderStruct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class ManageRequestOrderCall extends ethereum.Call {
  get inputs(): ManageRequestOrderCall__Inputs {
    return new ManageRequestOrderCall__Inputs(this);
  }

  get outputs(): ManageRequestOrderCall__Outputs {
    return new ManageRequestOrderCall__Outputs(this);
  }
}

export class ManageRequestOrderCall__Inputs {
  _call: ManageRequestOrderCall;

  constructor(call: ManageRequestOrderCall) {
    this._call = call;
  }

  get value0(): ManageRequestOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as ManageRequestOrderCallValue0Struct;
  }
}

export class ManageRequestOrderCall__Outputs {
  _call: ManageRequestOrderCall;

  constructor(call: ManageRequestOrderCall) {
    this._call = call;
  }
}

export class ManageRequestOrderCallValue0Struct extends ethereum.Tuple {
  get order(): ManageRequestOrderCallValue0OrderStruct {
    return this[0].toTuple() as ManageRequestOrderCallValue0OrderStruct;
  }

  get operation(): i32 {
    return this[1].toI32();
  }

  get sign(): Bytes {
    return this[2].toBytes();
  }
}

export class ManageRequestOrderCallValue0OrderStruct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class ManageWorkerpoolOrderCall extends ethereum.Call {
  get inputs(): ManageWorkerpoolOrderCall__Inputs {
    return new ManageWorkerpoolOrderCall__Inputs(this);
  }

  get outputs(): ManageWorkerpoolOrderCall__Outputs {
    return new ManageWorkerpoolOrderCall__Outputs(this);
  }
}

export class ManageWorkerpoolOrderCall__Inputs {
  _call: ManageWorkerpoolOrderCall;

  constructor(call: ManageWorkerpoolOrderCall) {
    this._call = call;
  }

  get value0(): ManageWorkerpoolOrderCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as ManageWorkerpoolOrderCallValue0Struct;
  }
}

export class ManageWorkerpoolOrderCall__Outputs {
  _call: ManageWorkerpoolOrderCall;

  constructor(call: ManageWorkerpoolOrderCall) {
    this._call = call;
  }
}

export class ManageWorkerpoolOrderCallValue0Struct extends ethereum.Tuple {
  get order(): ManageWorkerpoolOrderCallValue0OrderStruct {
    return this[0].toTuple() as ManageWorkerpoolOrderCallValue0OrderStruct;
  }

  get operation(): i32 {
    return this[1].toI32();
  }

  get sign(): Bytes {
    return this[2].toBytes();
  }
}

export class ManageWorkerpoolOrderCallValue0OrderStruct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class MatchOrdersCall extends ethereum.Call {
  get inputs(): MatchOrdersCall__Inputs {
    return new MatchOrdersCall__Inputs(this);
  }

  get outputs(): MatchOrdersCall__Outputs {
    return new MatchOrdersCall__Outputs(this);
  }
}

export class MatchOrdersCall__Inputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get value0(): MatchOrdersCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as MatchOrdersCallValue0Struct;
  }

  get value1(): MatchOrdersCallValue1Struct {
    return this._call.inputValues[1].value.toTuple() as MatchOrdersCallValue1Struct;
  }

  get value2(): MatchOrdersCallValue2Struct {
    return this._call.inputValues[2].value.toTuple() as MatchOrdersCallValue2Struct;
  }

  get value3(): MatchOrdersCallValue3Struct {
    return this._call.inputValues[3].value.toTuple() as MatchOrdersCallValue3Struct;
  }
}

export class MatchOrdersCall__Outputs {
  _call: MatchOrdersCall;

  constructor(call: MatchOrdersCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class MatchOrdersCallValue0Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCallValue1Struct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersCallValue2Struct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class MatchOrdersCallValue3Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class MatchOrdersWithEthCall extends ethereum.Call {
  get inputs(): MatchOrdersWithEthCall__Inputs {
    return new MatchOrdersWithEthCall__Inputs(this);
  }

  get outputs(): MatchOrdersWithEthCall__Outputs {
    return new MatchOrdersWithEthCall__Outputs(this);
  }
}

export class MatchOrdersWithEthCall__Inputs {
  _call: MatchOrdersWithEthCall;

  constructor(call: MatchOrdersWithEthCall) {
    this._call = call;
  }

  get value0(): MatchOrdersWithEthCallValue0Struct {
    return this._call.inputValues[0].value.toTuple() as MatchOrdersWithEthCallValue0Struct;
  }

  get value1(): MatchOrdersWithEthCallValue1Struct {
    return this._call.inputValues[1].value.toTuple() as MatchOrdersWithEthCallValue1Struct;
  }

  get value2(): MatchOrdersWithEthCallValue2Struct {
    return this._call.inputValues[2].value.toTuple() as MatchOrdersWithEthCallValue2Struct;
  }

  get value3(): MatchOrdersWithEthCallValue3Struct {
    return this._call.inputValues[3].value.toTuple() as MatchOrdersWithEthCallValue3Struct;
  }
}

export class MatchOrdersWithEthCall__Outputs {
  _call: MatchOrdersWithEthCall;

  constructor(call: MatchOrdersWithEthCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class MatchOrdersWithEthCallValue0Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get datasetrestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersWithEthCallValue1Struct extends ethereum.Tuple {
  get dataset(): Address {
    return this[0].toAddress();
  }

  get datasetprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get apprestrict(): Address {
    return this[4].toAddress();
  }

  get workerpoolrestrict(): Address {
    return this[5].toAddress();
  }

  get requesterrestrict(): Address {
    return this[6].toAddress();
  }

  get salt(): Bytes {
    return this[7].toBytes();
  }

  get sign(): Bytes {
    return this[8].toBytes();
  }
}

export class MatchOrdersWithEthCallValue2Struct extends ethereum.Tuple {
  get workerpool(): Address {
    return this[0].toAddress();
  }

  get workerpoolprice(): BigInt {
    return this[1].toBigInt();
  }

  get volume(): BigInt {
    return this[2].toBigInt();
  }

  get tag(): Bytes {
    return this[3].toBytes();
  }

  get category(): BigInt {
    return this[4].toBigInt();
  }

  get trust(): BigInt {
    return this[5].toBigInt();
  }

  get apprestrict(): Address {
    return this[6].toAddress();
  }

  get datasetrestrict(): Address {
    return this[7].toAddress();
  }

  get requesterrestrict(): Address {
    return this[8].toAddress();
  }

  get salt(): Bytes {
    return this[9].toBytes();
  }

  get sign(): Bytes {
    return this[10].toBytes();
  }
}

export class MatchOrdersWithEthCallValue3Struct extends ethereum.Tuple {
  get app(): Address {
    return this[0].toAddress();
  }

  get appmaxprice(): BigInt {
    return this[1].toBigInt();
  }

  get dataset(): Address {
    return this[2].toAddress();
  }

  get datasetmaxprice(): BigInt {
    return this[3].toBigInt();
  }

  get workerpool(): Address {
    return this[4].toAddress();
  }

  get workerpoolmaxprice(): BigInt {
    return this[5].toBigInt();
  }

  get requester(): Address {
    return this[6].toAddress();
  }

  get volume(): BigInt {
    return this[7].toBigInt();
  }

  get tag(): Bytes {
    return this[8].toBytes();
  }

  get category(): BigInt {
    return this[9].toBigInt();
  }

  get trust(): BigInt {
    return this[10].toBigInt();
  }

  get beneficiary(): Address {
    return this[11].toAddress();
  }

  get callback(): Address {
    return this[12].toAddress();
  }

  get params(): string {
    return this[13].toString();
  }

  get salt(): Bytes {
    return this[14].toBytes();
  }

  get sign(): Bytes {
    return this[15].toBytes();
  }
}

export class ReceiveApprovalCall extends ethereum.Call {
  get inputs(): ReceiveApprovalCall__Inputs {
    return new ReceiveApprovalCall__Inputs(this);
  }

  get outputs(): ReceiveApprovalCall__Outputs {
    return new ReceiveApprovalCall__Outputs(this);
  }
}

export class ReceiveApprovalCall__Inputs {
  _call: ReceiveApprovalCall;

  constructor(call: ReceiveApprovalCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class ReceiveApprovalCall__Outputs {
  _call: ReceiveApprovalCall;

  constructor(call: ReceiveApprovalCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RecoverCall extends ethereum.Call {
  get inputs(): RecoverCall__Inputs {
    return new RecoverCall__Inputs(this);
  }

  get outputs(): RecoverCall__Outputs {
    return new RecoverCall__Outputs(this);
  }
}

export class RecoverCall__Inputs {
  _call: RecoverCall;

  constructor(call: RecoverCall) {
    this._call = call;
  }
}

export class RecoverCall__Outputs {
  _call: RecoverCall;

  constructor(call: RecoverCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class ReopenCall extends ethereum.Call {
  get inputs(): ReopenCall__Inputs {
    return new ReopenCall__Inputs(this);
  }

  get outputs(): ReopenCall__Outputs {
    return new ReopenCall__Outputs(this);
  }
}

export class ReopenCall__Inputs {
  _call: ReopenCall;

  constructor(call: ReopenCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ReopenCall__Outputs {
  _call: ReopenCall;

  constructor(call: ReopenCall) {
    this._call = call;
  }
}

export class RequestTokenCall extends ethereum.Call {
  get inputs(): RequestTokenCall__Inputs {
    return new RequestTokenCall__Inputs(this);
  }

  get outputs(): RequestTokenCall__Outputs {
    return new RequestTokenCall__Outputs(this);
  }
}

export class RequestTokenCall__Inputs {
  _call: RequestTokenCall;

  constructor(call: RequestTokenCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestTokenCall__Outputs {
  _call: RequestTokenCall;

  constructor(call: RequestTokenCall) {
    this._call = call;
  }
}

export class RequestTokenForCall extends ethereum.Call {
  get inputs(): RequestTokenForCall__Inputs {
    return new RequestTokenForCall__Inputs(this);
  }

  get outputs(): RequestTokenForCall__Outputs {
    return new RequestTokenForCall__Outputs(this);
  }
}

export class RequestTokenForCall__Inputs {
  _call: RequestTokenForCall;

  constructor(call: RequestTokenForCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RequestTokenForCall__Outputs {
  _call: RequestTokenForCall;

  constructor(call: RequestTokenForCall) {
    this._call = call;
  }
}

export class RevealCall extends ethereum.Call {
  get inputs(): RevealCall__Inputs {
    return new RevealCall__Inputs(this);
  }

  get outputs(): RevealCall__Outputs {
    return new RevealCall__Outputs(this);
  }
}

export class RevealCall__Inputs {
  _call: RevealCall;

  constructor(call: RevealCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value1(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RevealCall__Outputs {
  _call: RevealCall;

  constructor(call: RevealCall) {
    this._call = call;
  }
}

export class SafeDepositEthCall extends ethereum.Call {
  get inputs(): SafeDepositEthCall__Inputs {
    return new SafeDepositEthCall__Inputs(this);
  }

  get outputs(): SafeDepositEthCall__Outputs {
    return new SafeDepositEthCall__Outputs(this);
  }
}

export class SafeDepositEthCall__Inputs {
  _call: SafeDepositEthCall;

  constructor(call: SafeDepositEthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SafeDepositEthCall__Outputs {
  _call: SafeDepositEthCall;

  constructor(call: SafeDepositEthCall) {
    this._call = call;
  }
}

export class SafeDepositEthForCall extends ethereum.Call {
  get inputs(): SafeDepositEthForCall__Inputs {
    return new SafeDepositEthForCall__Inputs(this);
  }

  get outputs(): SafeDepositEthForCall__Outputs {
    return new SafeDepositEthForCall__Outputs(this);
  }
}

export class SafeDepositEthForCall__Inputs {
  _call: SafeDepositEthForCall;

  constructor(call: SafeDepositEthForCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SafeDepositEthForCall__Outputs {
  _call: SafeDepositEthForCall;

  constructor(call: SafeDepositEthForCall) {
    this._call = call;
  }
}

export class SafeWithdrawEthCall extends ethereum.Call {
  get inputs(): SafeWithdrawEthCall__Inputs {
    return new SafeWithdrawEthCall__Inputs(this);
  }

  get outputs(): SafeWithdrawEthCall__Outputs {
    return new SafeWithdrawEthCall__Outputs(this);
  }
}

export class SafeWithdrawEthCall__Inputs {
  _call: SafeWithdrawEthCall;

  constructor(call: SafeWithdrawEthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SafeWithdrawEthCall__Outputs {
  _call: SafeWithdrawEthCall;

  constructor(call: SafeWithdrawEthCall) {
    this._call = call;
  }
}

export class SafeWithdrawEthToCall extends ethereum.Call {
  get inputs(): SafeWithdrawEthToCall__Inputs {
    return new SafeWithdrawEthToCall__Inputs(this);
  }

  get outputs(): SafeWithdrawEthToCall__Outputs {
    return new SafeWithdrawEthToCall__Outputs(this);
  }
}

export class SafeWithdrawEthToCall__Inputs {
  _call: SafeWithdrawEthToCall;

  constructor(call: SafeWithdrawEthToCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get value2(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class SafeWithdrawEthToCall__Outputs {
  _call: SafeWithdrawEthToCall;

  constructor(call: SafeWithdrawEthToCall) {
    this._call = call;
  }
}

export class SetCallbackGasCall extends ethereum.Call {
  get inputs(): SetCallbackGasCall__Inputs {
    return new SetCallbackGasCall__Inputs(this);
  }

  get outputs(): SetCallbackGasCall__Outputs {
    return new SetCallbackGasCall__Outputs(this);
  }
}

export class SetCallbackGasCall__Inputs {
  _call: SetCallbackGasCall;

  constructor(call: SetCallbackGasCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCallbackGasCall__Outputs {
  _call: SetCallbackGasCall;

  constructor(call: SetCallbackGasCall) {
    this._call = call;
  }
}

export class SetNameCall extends ethereum.Call {
  get inputs(): SetNameCall__Inputs {
    return new SetNameCall__Inputs(this);
  }

  get outputs(): SetNameCall__Outputs {
    return new SetNameCall__Outputs(this);
  }
}

export class SetNameCall__Inputs {
  _call: SetNameCall;

  constructor(call: SetNameCall) {
    this._call = call;
  }

  get ens(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetNameCall__Outputs {
  _call: SetNameCall;

  constructor(call: SetNameCall) {
    this._call = call;
  }
}

export class SetTeeBrokerCall extends ethereum.Call {
  get inputs(): SetTeeBrokerCall__Inputs {
    return new SetTeeBrokerCall__Inputs(this);
  }

  get outputs(): SetTeeBrokerCall__Outputs {
    return new SetTeeBrokerCall__Outputs(this);
  }
}

export class SetTeeBrokerCall__Inputs {
  _call: SetTeeBrokerCall;

  constructor(call: SetTeeBrokerCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTeeBrokerCall__Outputs {
  _call: SetTeeBrokerCall;

  constructor(call: SetTeeBrokerCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateDomainSeparatorCall extends ethereum.Call {
  get inputs(): UpdateDomainSeparatorCall__Inputs {
    return new UpdateDomainSeparatorCall__Inputs(this);
  }

  get outputs(): UpdateDomainSeparatorCall__Outputs {
    return new UpdateDomainSeparatorCall__Outputs(this);
  }
}

export class UpdateDomainSeparatorCall__Inputs {
  _call: UpdateDomainSeparatorCall;

  constructor(call: UpdateDomainSeparatorCall) {
    this._call = call;
  }
}

export class UpdateDomainSeparatorCall__Outputs {
  _call: UpdateDomainSeparatorCall;

  constructor(call: UpdateDomainSeparatorCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawEthCall extends ethereum.Call {
  get inputs(): WithdrawEthCall__Inputs {
    return new WithdrawEthCall__Inputs(this);
  }

  get outputs(): WithdrawEthCall__Outputs {
    return new WithdrawEthCall__Outputs(this);
  }
}

export class WithdrawEthCall__Inputs {
  _call: WithdrawEthCall;

  constructor(call: WithdrawEthCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawEthCall__Outputs {
  _call: WithdrawEthCall;

  constructor(call: WithdrawEthCall) {
    this._call = call;
  }
}

export class WithdrawEthToCall extends ethereum.Call {
  get inputs(): WithdrawEthToCall__Inputs {
    return new WithdrawEthToCall__Inputs(this);
  }

  get outputs(): WithdrawEthToCall__Outputs {
    return new WithdrawEthToCall__Outputs(this);
  }
}

export class WithdrawEthToCall__Inputs {
  _call: WithdrawEthToCall;

  constructor(call: WithdrawEthToCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawEthToCall__Outputs {
  _call: WithdrawEthToCall;

  constructor(call: WithdrawEthToCall) {
    this._call = call;
  }
}

export class WithdrawToCall extends ethereum.Call {
  get inputs(): WithdrawToCall__Inputs {
    return new WithdrawToCall__Inputs(this);
  }

  get outputs(): WithdrawToCall__Outputs {
    return new WithdrawToCall__Outputs(this);
  }
}

export class WithdrawToCall__Inputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class WithdrawToCall__Outputs {
  _call: WithdrawToCall;

  constructor(call: WithdrawToCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
